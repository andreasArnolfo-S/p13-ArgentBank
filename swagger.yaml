swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactionMonthly:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User transaction
      description: Fetch the transactions Monthly
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
          required: true
        - in: body
          name: body
          description: Month
          type: integer
          required: true
          schema:
            $ref: '#/definitions/TransactionMonth'
      produces:
        - application/json
      responses:
        '200':
          description: User's transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transaction:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User transaction
      description: Fetch one transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
          required: true
        - in: body
          name: body
          description: id
          type: string
          required: true
          schema: 
            $ref: '#/definitions/TransactionId'
      produces:
        - application/json
      responses:
        '200':
          description: User's transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    /user/transaction:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User transaction
      description: request update the transactions
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: User's transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionUpdateResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    /user/transaction:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User transaction
      description: Create a transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
          required: true
        - in: body
          name: body
          description: Create transaction attirubutes
          required: true
          schema:
            $ref: '#/definitions/transactions'
      produces:
        - application/json
      responses:
        '200':
          description: User's transactions retrieved successully
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    /user/transcation:
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User transaction
      description: delete a transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
          required: true
        - in: body
          name: body
          description: id of transcation i want delete
          required: true
          schema:
            $ref: '#/definitions/TransactionId'
      produces:
        - application/json
      responses:
        '200':
          description: User's transactions retrieved successully
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Transactions successfully retrieved!
  transactions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: This transaction's UUID
              example: 620cc0003724e10c821cfb55
            date:
              type: string
              format: date-time
              description: The date at which this transaction has been effectued
              example: 2022-02-16T09:12:32.766+00:00
            description:
              type: string
              description: This transaction description (recipient name)
              example: Golden Sun Bakery
            amount:
              type: integer
              description: The sum which has been payed by the user in cents
              example: 50
            balance:
              type: integer
              description: This account balance after payment in cents
              example: 208979
            type:
              type: string
              description: The method used by the user in order to pay (electronic, cash, etc...)
              example: Electronic
            category:
              type: string
              description: The category of this transaction (Food | Personal | etc...)
              example: Food
            notes:
              type: string
              description: Note added by the user. Default is empty.
              example: Chocolatine
  TransactionUpdateRequest:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: The UUID of the transaction that need to be updated
        example: 620cc0005784e10c821cfb33
      category:
        type: string
        description: The new category of this transaction
        example: Deposit
      notes:
        type: string
        description: Note added by the user.
        example: Salary
  TransactionUpdateResponse:
    type: object
    properties:
      status:
        type: integer
        description: Response status code from the API
        example: 200
      message:
        type: string
        description: Response message from the API
        example: Transaction successfully updated!
      transaction:
        type: object
        properties:
          id:
            type: string
            format: uuid
            description: The UUID of the transaction that need to be updated
            example: 620cc0005784e10c821cfb33
          category:
            type: string
            description: The new category of this transaction
            example: Deposit
          notes:
            type: string
            description: Note added by the user.
            example: Salary
  TransactionId:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: The UUID of the transaction that need to be updated
        example: 620cc0005784e10c821cfb33
  TransactionMonth:
    type: object
    properties:
      month:
        type: integer
        example: 12